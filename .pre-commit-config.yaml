default_stages: [pre-commit]
default_install_hook_types: [pre-commit, commit-msg]
minimum_pre_commit_version: '3.0.0'

repos:
  # examples
  - repo: local
    hooks:
      - id: python-fmt-lint
        name: python format and lint
        entry: sh -c 'cd examples && pixi run -e ci-basics --frozen fmt'
        language: system
        files: ^examples/.*\.(py|ipynb)$
        pass_filenames: false
        require_serial: false
  # library
  - repo: local
    hooks:
      - id: python-fmt-lint
        name: python format and lint
        entry: sh -c 'pixi run -e build --frozen fmt'
        language: system
        files: ^projects/.*\.(py|ipynb)$
        pass_filenames: false
        require_serial: false

  # Quick local checks (no virtualenv needed)
  - repo: local
    hooks:
      - id: check-merge-conflict
        name: check for merge conflicts
        entry: sh -c 'if grep -r "^<<<<<<< \|^=======$\|^>>>>>>> " --include="*.rs" --include="*.py" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" --include="*.json" --include="*.sql" --exclude-dir=".pixi" --exclude-dir="node_modules" --exclude-dir=".git" --exclude-dir="target" .; then echo "Found merge conflict markers!"; exit 1; else echo "No merge conflicts found"; fi'
        language: system
        pass_filenames: false
      - id: check-large-files
        name: check for large files
        entry: sh -c 'find . -type f -size +1M -not -path "./.git/*" -not -path "./.pixi/*" -not -path "./node_modules/*" -not -path "./.sqlx/*" | head -5'
        language: system
        pass_filenames: false

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.8.3
    hooks:
      - id: commitizen
        stages: [commit-msg]